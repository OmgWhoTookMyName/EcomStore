@page "/productgrid"
@using MyFirstEcommerceStore.Data
@inject NotificationService NotificationService
@inject DialogService DialogService


<RadzenButton Text="New Product" ButtonStyle="ButtonStyle.Secondary" Click=@CreateProduct />
<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
    Data="@products" Grid="grid" TItem="Products" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Products" Property="ProductId" Title="SKU" Width="160px" />
        <RadzenDataGridColumn TItem="Products" Property="ProductName" Title="Name" Width="160px"/>
        <RadzenDataGridColumn TItem="Products" Property="ProductDescription" Title="Description" Width="200px" />
        <RadzenDataGridColumn TItem="Products" Property="Price" Title="Price" Width="120px" />
        <RadzenDataGridColumn TItem="Products" Property="BrandName" Title="Brand" Width="120px" />
        <RadzenDataGridColumn Width="160px" TItem="Products" Property="ProductId" Title="Delete">
            <Template Context="products">
                <RadzenButton ButtonStyle="ButtonStyle.Info" Click=@(args => @HandleDelete(@products)) Icon="info" Class="m-1" Text="Delete" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    IEnumerable<Products> products;
    private ProductCRUD crud = new();
    RadzenDataGrid<Products> grid = new RadzenDataGrid<Products>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
 
        products = await crud.GetAllProducts();
    }

    private async void HandleDelete(Products product)
    {
        Console.WriteLine("Handling deletes " + product.ProductId);

        await crud.DeleteProduct(product);
        products = await crud.GetAllProducts();
    }

    private async Task CreateProduct(){
        await DialogService.OpenAsync<ProductCreateDialog>("Create Product");
        await Refresh();
    }

    private async Task Refresh(){
        products = await crud.GetAllProducts();
    }


}